name: Deploy MultiK8s
on:
  push:
    branches:
      - main

env:
  SHA: $(git rev-parse HEAD)

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ayule/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true ayule/react-test npm test

      - name: Set Service Key
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set Project
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Auth
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          location: ${{ secrets.CLUSTER_LOCATION }}

      - name: Build
        run: |-
          docker build -t ayule/multi-client-k8s:latest -t ayule/multi-client-k8s:${{ env.SHA }} -f ./client/Dockerfile ./client
          docker build -t ayule/multi-server-k8s:latest -t ayule/multi-server-k8s:${{ env.SHA }} -f ./server/Dockerfile ./server
          docker build -t ayule/multi-worker-k8s:latest -t ayule/multi-worker-k8s:${{ env.SHA }} -f ./worker/Dockerfile ./worker

      - name: Push
        run: |-
          docker push ayule/multi-client-k8s:latest
          docker push ayule/multi-server-k8s:latest
          docker push ayule/multi-worker-k8s:latest

          docker push ayule/multi-client-k8s:${{ env.SHA }}
          docker push ayule/multi-server-k8s:${{ env.SHA }}
          docker push ayule/multi-worker-k8s:${{ env.SHA }}

      - name: Apply
        run: |-
          kubectl apply -f k8s
          kubectl set image deployments/server-deployment server=ayule/multi-server-k8s:${{ env.SHA }}
          kubectl set image deployments/client-deployment client=ayule/multi-client-k8s:${{ env.SHA }}
          kubectl set image deployments/worker-deployment worker=ayule/multi-worker-k8s:${{ env.SHA }}
